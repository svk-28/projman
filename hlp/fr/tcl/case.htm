<HTML><HEAD>
<BASEFONT FACE="Times New Roman" SIZE="2" COLOR="#000000">
</HEAD>
<BODY>
<div><H3><b>case&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Commandes Internes Tcl</b></H3></div>
<HR ALIGN="center">
<div><b>NOM</b></div> <br>
<div ALIGN="LEFT" style="margin-left: 51px;">case - Evalue un parmi plusieurs scripts, dépendant d'une valeur donnée 
</div><br>
<div><b>SYNTAXE</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;"><b>case</b><i> string </i>?<b>in</b>? <i>patList body </i>?<i>patList body </i>...? <br>
<b>case</b><i> string </i>?<b>in</b>? &#123;<i>patList body </i>?<i>patList body </i>...?}
</div><br>
<div><b>DESCRIPTION</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51.htmpx;"><i>Note: la commande </i><b>case </b><i>est obsolète et est supportée uniquement pour </i><i>compatibilité ascendante.&nbsp; Elle sera supprimée un jour ou l'autre. Utilisez la </i><i>plutot la commande </i><A HREF="167.htm"><b>switch </b></A><i>.</i> </div>
<div ALIGN="LEFT" style="margin-left: 51px;">La commande <b>case</b> compare <i>string</i> à chacun des arguments <i>patList</i> dans l'ordre. Chaque argument <i>patList</i> est une liste d'un ou plusieurs modèles. Si un de ces modèles correspond à <i>string</i> alors <b>case</b> évalue l'argument <i>body</i> suivant en le transmettant récursivement à l'interpréteur Tcl et renvoie le résultat de cette evaluation. Chaque argument <i>patList</i> est constitué d'un simple modèle ou d'une liste de modèles.&nbsp; Chaque modèle peut contenir un des jokers décrits dans <b>string </b><b>match</b>.&nbsp; Si un argument <i>patList</i> est <b>default</b>, le <i>body</i> correspondant sera évalué si aucun <i>patList</i> ne correspond à <i>string</i>.&nbsp; Si aucun argument <i>patList</i> ne correspond à <i>string</i> et default n'est pas défini, alors la commande<b> case</b> renvoie une chaîne vide. </div>
<div ALIGN="LEFT" style="margin-left: 51px;">Deux syntaxes sont fournies pour les arguments<i> patList</i> et <i>body</i>. La première utilise un argument séparé pour chacun des modèles et commandes; cette forme convient si les substitutions sont désirées dans un des modèles ou des commandes. La seconde forme regroupe tous les modèles et commandes dans un simple argument; l'argument doit avoir une structure de liste correcte, les éléments de la liste etant les modèles et commandes. La seconde forme facilite la construction de commandes case multi-ligne, car les accolades englobant la liste rendent inutile l'inclusion d'un antislash à la fin de chaque ligne. Comme les arguments <i>patList</i> sont entre accolades dans la seconde forme, aucune substitution de commande ou de variable ne leur sont appliquées; ceci rend le comportement de la seconde forme différent de la première dans quelque cas.</div><br>
<div>Dernière révision: 7.0</div>
<br>
<br><div ALIGN="CENTER"><A HREF="index.htm"><b>Index</b></A>&nbsp;&nbsp;<A HREF="92.htm"><b>Précédent</b></A>&nbsp;&nbsp;<A HREF="94.htm"><b>Suivant</b></A></div>
</BODY></HTML>
