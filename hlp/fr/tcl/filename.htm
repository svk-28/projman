<HTML><HEAD>
<BASEFONT FACE="Times New Roman" SIZE="2" COLOR="#000000">
</HEAD>
<BODY>
<div><H3><b>filename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Commandes Internes Tcl</b></H3></div>
<HR ALIGN="center">
<div><b>NOM</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">filename - conventions de nom de fichiers supportées par les commandes Tcl 
</div><br>
<div><b>INTRODUCTION</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">Toutes les commandes Tcl et les fonctions C qui attendent des noms de fichier comme arguments les attendent sous une parmi trois formes, dépendantes de la plateforme courante.  Sur chaque plateforme, Tcl supporte les noms de fichier standard de cette plateforme.  De plus, sur toutes les plateformes, Tcl supporte une syntaxe Unix-like conçue pour fournir une manière pratique de construire des noms de fichier simples. Néanmoins, les scripts qui sont conçus pour être portables ne devront pas présumer d'une forme particulière pour les noms de fichier. Par contre, les scripts portables doivent utiliser les commandes <b>file split</b> et <A HREF="111.htm"><b>file</b></A> <b>join</b> pour manipuler les noms de fichier (voyez la page de manuel de <A HREF="111.htm"><b>file</b></A> pour plus de détails) 
</div><br>
<div><b>TYPES DE CHEMIN </b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">Les noms de fichier sont groupés dans trois types généraux basés sur le point de départ du chemin utilisé pour désigner le fichier: absolu, relatif, et volume-relatif. Les noms absolus sont complètement qualifiés, donnant un chemin vers le fichier relativement à un volume particulier et au répertoire racine sur ce volume. Les noms relatifs sont non-qualifiés, donnant un chemin vers le  fichier relativement au répertoire de travail courant. Les noms Volume-relatif sont partiellement qualifiés, soit donnant le chemin relativement au répertoire racine sur le volume courant, ou relativement au répertoire courant du volume spécifié. La commande <b>file pathtype</b> peut être utilisée pour determiner le type d'un chemin donné. 
</div><br>
<div><b>SYNTAXE DE CHEMIN </b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">Les règles des noms natifs dependent de la valeur rapportée dans l'élément du tableau Tcl <b>tcl_platform(platform)</b>: <br>
<DL>
  <DT><b>mac</b></DT><DD>Sur les systèmes Apple Macintosh, Tcl supporte deux formes de noms de chemin.  Les styles normaux de noms Mac utilisent les deux points comme séparateurs de chemin Les chemins peuvent être relatifs ou absolus, et les noms de fichier peuvent conternir tout caractère autre que les deux points Un caractère deux points en tête cause l'interprétation du reste du chemin comme relatif au répertoire courant. Si un chemin contient deux points qui ne sont pas en tête, alors le chemin est interprété comme un chemin absolu Des séquences de deux ou plus deux points ailleurs dans le chemin sont utilisées pour construire des chemins relatifs ou <b>::</b> se réfère au parent du répertoire courant, <b>:::</b> se réfère au parent du parent, et ainsi de suite. 
En supplément au noms style Macintosh, Tcl aussi supporte un sous ensemble de noms Unix-like Si un chemin ne contient pas les deux points, alors il est interprété comme un chemin Unix Le slash est utilisé comme séparateur de chemin Le nom de chemin <b>.</b> se réfère au répertoire courant, et <b>..</b> se réfère au parent du répertoire courant Néanmoins, quelque noms comme <b>/</b> ou <b>/..</b> ne sont pas assignés, et sont interprétés comme noms Macintosh En general, les commandes qui générent les noms de fichier renverront des&nbsp; noms style Macintosh, mais les commandes qui attendent des noms de fichier acceptent aussi bien les noms style Macintosh que Unix.
Les exemples suivants illustrent les formes variées de noms de chemin:
 <DL>
  <DT><br><b>:</b></DT><DD>Chemin relatif au dossier courant.</DD>
  <DT><br><b>MyFile</b></DT><DD>Chemin relatif à un nom de chemin <b>MyFile</b> dans le dossier courant. 
</DD>
  <DT><br><b>MyDisk:MyFile</b></DT><DD>Chemin absolu à un fichier nommé <b>MyFile</b> sur le périphérique nommé <b>MyDisk</b>.
</DD>
  <DT><br><b>:MyDir:MyFile</b></DT><DD>Chemin relatif à un fichier nommé <b>MyFile</b> dans un dossier nommé <b>MyDir</b> dans le dossier courant.
</DD>
  <DT><br><b>::MyFile</b></DT><DD>Chemin relatif à un fichier nommé <b>MyFile</b> dans le dossier parent du dossier courant.
</DD>
  <DT><br><b>:::MyFile</b></DT><DD>Chemin relatif à un fichier nommé <b>MyFile</b> dans le dossier deux niveaux au dessus du dossier courant. 
</DD>
  <DT><br><b>/MyDisk/MyFile</b></DT><DD>Chemin absolu à un fichier nommé <b>MyFile</b> sur le périphérique nommé <b>MyDisk</b>.
</DD>
  <DT><br><b>../MyFile</b></DT><DD>Chemin relatif à un fichier nommé <b>MyFile</b> dans le dossier parent du dossier courant.
</DD>
</DL>
</DD>
  <DT><b>unix</b></DT><DD>Sur les plateformes Unix, Tcl utilise des noms de chemin où les composants sont séparés par des slashes. Les noms de chemin peuvent être relatifs ou absolus, et les noms de fichier peuvent contenir tout caractère autre que le slash Les noms de fichier <b>.</b> et <b>..</b> sont spéciaux et se refèrent&nbsp; au répertoire courant et au parent du répertoire courant respectivement Plusieurs caractères slashes adjacents sont interprété comme un seul séparateur. Les exemples suivants illustrent les formes variées de noms de chemin: 
<DL>
  <DT><br><b>/</b></DT><DD>Chemin absolu au répertoire racine. </DD>
  <DT><br><b>/etc/passwd</b></DT><DD>Chemin absolu vers le fichier nommé <b>passwd</b> dans le répertoire <b>etc</b> du répertoire racine. 
</DD>
  <DT><br><b>.</b></DT><DD>Chemin relatif au répertoire courant. </DD>
  <DT><br><b>foo</b></DT><DD>Chemin relatif au fichier <b>foo</b> dans le répertoire courant. 
</DD>
  <DT><br><b>foo/bar</b></DT><DD>Chemin relatif au fichier <b>bar</b> dans le répertoire <b>foo</b> du répertoire courant. 
</DD>
  <DT><br><b>../foo</b></DT><DD>Chemin relatif au fichier <b>foo</b> dans le répertoire parent du répertoire courant.
</DD>
</DL>

</DD>
  <DT><b>windows</b></DT><DD><br>Sur les plateformes Microsoft Windows, Tcl supporte les noms relatifs au lecteur et UNC L'ensemble <b>/</b> et <b>&#92;</b> peut être employé comme séparateurs de répertoires dans les deux types de nom. Les noms relatifs au lecteur consistent en un spécificateur optionnel de lecteur suivi par un chemin absolu ou relatif Les chemins UNC ont la forme generale <b>&#92;&#92;servername&#92;sharename&#92;path&#92;</b><A HREF="111.htm"><b>file</b></A> Sous les deux formes, les noms de fichier <b>.</b> et <b>..</b> sont spéciaux et se refèrent respectivement au répertoire courant et au parent du répertoire courant. Les exemples suivants illustrent les formes variées de noms de chemin:
<DL>
  <DT><br><b>&#92;&#92;Host&#92;share/file</b></DT><DD>chemin UNC absolu vers un fichier appelé <A HREF="111.htm"><b>file</b></A> dans le répertoire racine du partage  <b>share</b> sur la machine <b>Host</b>.</DD>
  <DT><br><b>c:foo</b>
</DT><DD>Chemin relatif au volume vers un fichier <b>foo</b> dans le répertoire courant du lecteur <b>c</b>. 
</DD>
  <DT><br><b>c:/foo</b></DT><DD>Chemin absolu vers un fichier <b>foo</b> dans le répertoire racine du lecteur <b>c</b>. 
</DD>
  <DT><br><b>foo&#92;bar</b></DT><DD>Chemin relatif vers un fichier <b>bar</b> dans le répertoire <b>foo</b> dans le répertoire courant sur le volume courant . 
</DD>
  <DT><br><b>&#92;foo</b><br></DT><DD>Chemin relatif au volume vers un fichier <b>foo</b> dans le répertoire racine du volume courant .</DD>
</DL>
 </DD>
</DL>
</div>
<br>
<div><b>SUBSTITUTION DE TILDE</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">En plus des règles de nom de chemin décrites plus haut, Tcl supporte aussi la substitution de tilde <i>csh</i>-style Si un nom de chemin commence avec un tilde, alors le nom de chemin sera interprété comme si le premier élément etait remplacé par l'emplacement du répertoire home d'un utilisateur donné. Si le tilde est suivi immédiatement par un séparateur, alors la variable d'environnement <b>&#36;HOME</b> est substituée. Sinon les caractères entre le tilde et le séparateur suivant sont pris pour un nom d'utilisateur, qui est utilisé pour récupérer le répertoire home de l'utilisateur pour substitution. </div>
<div ALIGN="LEFT" style="margin-left: 51px;">Les plateformes Macintosh et Windows ne supportent pas la substitution tilde quand un nom d'utilisateur suit le tilde. Sur ces plateformes, tenter d'utiliser un tilde suivi d'un nom d'utilisateur générera une erreur. Les noms de fichiers qui ont un tilde sans nom d'utilisateur seront substitués en utilisant la variable d'environnement<b> &#36;HOME</b>, comme sous Unix 
</div><br>
<div><b>PROBLEMES DE PORTABILITE</b></div><br>
<div ALIGN="LEFT" style="margin-left: 51px;">Tous les système de fichiers ne sont pas sensibles à la casse, donc les scripts eviteront l'emploi d'un code dépendant de la casse dans un nom de chemin. De plus, les jeux de caractères autorisés sur des périphériques différents peuvent différer, donc on choisira des noms de fichiers qui ne contiennent pas de caractères spéciaux comme: <b>&lt;&gt;:&quot;/&#92;|</b> La meilleure approche est d'utiliser des noms consistant de caractères alphanumeriques seulement. Windows 3.1 également ne supporte que les noms de fichier de 8 caractères et une extension de 3 caractères </div><br>
<div>Dernière révision: 7.5</div>
<br>
<br><div ALIGN="CENTER"><A HREF="index.htm"><b>Index</b></A>&nbsp;&nbsp;<A HREF="112.htm"><b>Précédent</b></A>&nbsp;&nbsp;<A HREF="114.htm"><b>Suivant</b></A>
</div>
</BODY></HTML>
